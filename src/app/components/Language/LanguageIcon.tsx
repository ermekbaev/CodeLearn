// src/app/components/LanguageIcon.tsx

import React, { JSX } from 'react';

interface LanguageIconProps {
  language: string | undefined;
  className?: string;
  size?: 'sm' | 'md' | 'lg';
}

const LanguageIcon: React.FC<LanguageIconProps> = ({ 
  language, 
  className = '', 
  size = 'md' 
}) => {
  // Определяем размеры для разных вариантов
  const sizeClasses = {
    sm: 'w-8 h-8',
    md: 'w-12 h-12',
    lg: 'w-16 h-16',
  };

  // Определяем цвета фона для фалбеков
  const bgColors: { [key: string]: string } = {
    js: 'bg-yellow-500',
    javascript: 'bg-yellow-500',
    python: 'bg-blue-600',
    html: 'bg-orange-600',
    'html/css': 'bg-orange-600',
    react: 'bg-blue-400',
  };

  // Проверяем существование языка и нормализуем
  if (!language) {
    return (
      <div className={`${sizeClasses[size]} bg-gray-400 rounded-lg flex items-center justify-center text-white font-bold ${className}`}>
        N/A
      </div>
    );
  }

  // Нормализуем язык для поиска в массиве иконок
  const normalizedLanguage = language.toLowerCase().replace(/[^a-z]/g, '');

  // Иконки языков программирования
  const icons: { [key: string]: JSX.Element } = {
    js: (
      <svg className={`${sizeClasses[size]} ${className}`} fill="#F7DF1E" viewBox="0 0 24 24">
        <path d="M0 0h24v24H0V0zm22.034 18.276c-.175-1.095-.888-2.015-3.003-2.873-.736-.345-1.554-.585-1.797-1.14-.091-.33-.105-.51-.046-.705.15-.646.915-.84 1.515-.66.39.12.75.42.976.9 1.034-.676 1.034-.676 1.755-1.125-.27-.42-.404-.601-.586-.78-.63-.705-1.469-1.065-2.834-1.034l-.705.089c-.676.165-1.32.525-1.71 1.005-1.14 1.291-.811 3.541.569 4.471 1.365 1.02 3.361 1.244 3.616 2.205.24 1.17-.87 1.545-1.966 1.41-.811-.18-1.26-.586-1.755-1.336l-1.83 1.051c.21.48.45.689.81 1.109 1.74 1.756 6.09 1.666 6.871-1.004.029-.09.24-.705.074-1.65l.046.067zm-8.983-7.245h-2.248c0 1.938-.009 3.864-.009 5.805 0 1.232.063 2.363-.138 2.711-.33.689-1.18.601-1.566.48-.396-.196-.597-.466-.83-.855-.063-.105-.11-.196-.127-.196l-1.825 1.125c.305.63.75 1.172 1.324 1.517.855.51 2.004.675 3.207.405.783-.226 1.458-.691 1.811-1.411.51-.93.402-2.07.397-3.346.012-2.054 0-4.109 0-6.179l.004-.056z"/>
      </svg>
    ),
    javascript: (
      <svg className={`${sizeClasses[size]} ${className}`} fill="#F7DF1E" viewBox="0 0 24 24">
        <path d="M0 0h24v24H0V0zm22.034 18.276c-.175-1.095-.888-2.015-3.003-2.873-.736-.345-1.554-.585-1.797-1.14-.091-.33-.105-.51-.046-.705.15-.646.915-.84 1.515-.66.39.12.75.42.976.9 1.034-.676 1.034-.676 1.755-1.125-.27-.42-.404-.601-.586-.78-.63-.705-1.469-1.065-2.834-1.034l-.705.089c-.676.165-1.32.525-1.71 1.005-1.14 1.291-.811 3.541.569 4.471 1.365 1.02 3.361 1.244 3.616 2.205.24 1.17-.87 1.545-1.966 1.41-.811-.18-1.26-.586-1.755-1.336l-1.83 1.051c.21.48.45.689.81 1.109 1.74 1.756 6.09 1.666 6.871-1.004.029-.09.24-.705.074-1.65l.046.067zm-8.983-7.245h-2.248c0 1.938-.009 3.864-.009 5.805 0 1.232.063 2.363-.138 2.711-.33.689-1.18.601-1.566.48-.396-.196-.597-.466-.83-.855-.063-.105-.11-.196-.127-.196l-1.825 1.125c.305.63.75 1.172 1.324 1.517.855.51 2.004.675 3.207.405.783-.226 1.458-.691 1.811-1.411.51-.93.402-2.07.397-3.346.012-2.054 0-4.109 0-6.179l.004-.056z"/>
      </svg>
    ),
    python: (
      <svg className={`${sizeClasses[size]} ${className}`} viewBox="0 0 256 255" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid">
      <defs>
          <linearGradient x1="12.959%" y1="12.039%" x2="79.639%" y2="78.201%" id="pythonBlue">
              <stop stopColor="#387EB8" offset="0%"/>
              <stop stopColor="#366994" offset="100%"/>
          </linearGradient>
          <linearGradient x1="19.128%" y1="20.579%" x2="90.742%" y2="88.429%" id="pythonYellow">
              <stop stopColor="#FFE052" offset="0%"/>
              <stop stopColor="#FFC331" offset="100%"/>
          </linearGradient>
      </defs>
      <path d="M126.916,0.072 C62.084,0.072 64.896,28.153 64.896,28.153 L64.973,57.229 L128.001,57.229 L128.001,70.717 L41.631,70.717 C41.631,70.717 0.145,66.206 0.145,130.195 C0.145,194.184 36.216,192.079 36.216,192.079 L58.374,192.079 L58.374,161.963 C58.374,161.963 57.195,125.891 93.957,125.891 L155.824,125.891 C155.824,125.891 189.905,126.407 189.905,93.041 L189.905,33.977 C189.905,33.977 194.668,0.072 126.916,0.072 Z M92.802,19.659 C98.731,19.659 103.535,24.463 103.535,30.392 C103.535,36.321 98.731,41.125 92.802,41.125 C86.873,41.125 82.069,36.321 82.069,30.392 C82.069,24.463 86.873,19.659 92.802,19.659 Z" fill="url(#pythonBlue)"/>
      <path d="M128.757,254.126 C193.589,254.126 190.777,226.045 190.777,226.045 L190.7,196.969 L127.672,196.969 L127.672,183.481 L214.042,183.481 C214.042,183.481 255.528,188.042 255.528,124.053 C255.528,60.064 219.457,62.169 219.457,62.169 L197.299,62.169 L197.299,92.285 C197.299,92.285 198.478,128.357 161.716,128.357 L99.849,128.357 C99.849,128.357 65.768,127.841 65.768,161.207 L65.768,220.271 C65.768,220.271 61.005,254.126 128.757,254.126 Z M162.913,234.539 C156.984,234.539 152.18,229.735 152.18,223.806 C152.18,217.877 156.984,213.073 162.913,213.073 C168.842,213.073 173.646,217.877 173.646,223.806 C173.646,229.735 168.842,234.539 162.913,234.539 Z" fill="url(#pythonYellow)"/>
  </svg>
    ),
    html: (
      <svg className={`${sizeClasses[size]} ${className}`} fill="#E34F26" viewBox="0 0 24 24">
        <path d="M1.5 0h21l-1.91 21.563L11.977 24l-8.564-2.438L1.5 0zm7.031 9.75l-.232-2.718 10.059.003.23-2.622L5.412 4.41l.698 8.01h9.126l-.326 3.426-2.91.804-2.955-.81-.188-2.11H6.248l.33 4.171L12 19.351l5.379-1.443.744-8.157H8.531z"/>
      </svg>
    ),
    htmlcss: (
      <svg className={`${sizeClasses[size]} ${className}`} fill="#E34F26" viewBox="0 0 24 24">
        <path d="M1.5 0h21l-1.91 21.563L11.977 24l-8.564-2.438L1.5 0zm7.031 9.75l-.232-2.718 10.059.003.23-2.622L5.412 4.41l.698 8.01h9.126l-.326 3.426-2.91.804-2.955-.81-.188-2.11H6.248l.33 4.171L12 19.351l5.379-1.443.744-8.157H8.531z"/>
      </svg>
    ),
    react: (
      <svg className={`${sizeClasses[size]} ${className}`} fill="#61DAFB" viewBox="0 0 24 24">
        <path d="M14.23 12.004a2.236 2.236 0 0 1-2.235 2.236 2.236 2.236 0 0 1-2.236-2.236 2.236 2.236 0 0 1 2.235-2.236 2.236 2.236 0 0 1 2.236 2.236zm2.648-10.69c-1.346 0-3.107.96-4.888 2.622-1.78-1.653-3.542-2.602-4.887-2.602-.41 0-.783.093-1.106.278-1.375.793-1.683 3.264-.973 6.365C1.98 8.917 0 10.42 0 12.004c0 1.59 1.99 3.097 5.043 4.03-.704 3.113-.39 5.588.988 6.38.32.187.69.275 1.102.275 1.345 0 3.107-.96 4.888-2.624 1.78 1.654 3.542 2.603 4.887 2.603.41 0 .783-.09 1.106-.275 1.374-.792 1.683-3.263.973-6.365C22.02 15.096 24 13.59 24 12.004c0-1.59-1.99-3.097-5.043-4.032.704-3.11.39-5.587-.988-6.38a2.167 2.167 0 0 0-1.092-.278zm-.005 1.09v.006c.225 0 .406.044.558.127.666.382.955 1.835.73 3.704-.054.46-.142.945-.25 1.44a23.476 23.476 0 0 0-3.107-.534A23.892 23.892 0 0 0 12.769 4.7c1.592-1.48 3.087-2.292 4.105-2.295zm-9.77.02c1.012 0 2.514.808 4.11 2.28-.686.72-1.37 1.537-2.02 2.442a22.73 22.73 0 0 0-3.113.538 15.02 15.02 0 0 1-.254-1.42c-.23-1.868.054-3.32.714-3.707.19-.09.4-.127.563-.132zm4.882 3.05c.455.468.91.992 1.36 1.564-.44-.02-.89-.034-1.345-.034-.46 0-.915.01-1.36.034.44-.572.895-1.096 1.345-1.565zM12 8.1c.74 0 1.477.034 2.202.093.406.582.802 1.203 1.183 1.86.372.64.71 1.29 1.018 1.946-.308.655-.646 1.31-1.013 1.95-.38.66-.773 1.288-1.18 1.87a25.64 25.64 0 0 1-4.412.005 26.64 26.64 0 0 1-1.183-1.86c-.372-.64-.71-1.29-1.018-1.946a25.17 25.17 0 0 1 1.013-1.954c.38-.66.773-1.286 1.18-1.868A25.245 25.245 0 0 1 12 8.098zm-3.635.254c-.24.377-.48.763-.704 1.16-.225.39-.435.782-.635 1.174-.265-.656-.49-1.31-.676-1.947.64-.15 1.315-.283 2.015-.386zm7.26 0c.695.103 1.365.23 2.006.387-.18.632-.405 1.282-.66 1.933a25.952 25.952 0 0 0-1.345-2.32zm3.063.675c.484.15.944.317 1.375.498 1.732.74 2.852 1.708 2.852 2.476-.005.768-1.125 1.74-2.857 2.475-.42.18-.88.342-1.355.493a23.966 23.966 0 0 0-1.1-2.98c.45-1.017.81-2.01 1.085-2.964zm-13.395.004c.278.96.645 1.957 1.1 2.98a23.142 23.142 0 0 0-1.086 2.964c-.484-.15-.944-.318-1.37-.5-1.732-.737-2.852-1.706-2.852-2.474 0-.768 1.12-1.742 2.852-2.476.42-.18.88-.342 1.356-.494zm11.678 4.28c.265.657.49 1.312.676 1.948-.64.157-1.316.29-2.016.39a23.982 23.982 0 0 0 1.34-2.338zm-9.945.02c.2.392.41.783.64 1.175.23.39.465.772.705 1.143a22.087 22.087 0 0 1-2.006.386c.18-.63.406-1.282.66-1.934zM17.92 16.32c.112.493.2.968.254 1.423.23 1.868-.054 3.32-.714 3.708-.147.09-.338.128-.563.128-1.012 0-2.514-.807-4.11-2.28.686-.72 1.37-1.536 2.02-2.44 1.107-.106 2.154-.265 3.113-.54zm-11.83.01c.96.272 1.99.434 3.088.54.66.905 1.345 1.727 2.04 2.446-1.595 1.483-3.092 2.295-4.11 2.295a1.35 1.35 0 0 1-.553-.132c-.666-.38-.955-1.834-.73-3.703.054-.46.142-.944.25-1.438zm4.56.64c.44.02.89.034 1.345.034.46 0 .915-.01 1.36-.034a28.073 28.073 0 0 1-1.345 1.56c-.435-.488-.885-1-1.34-1.56z"/>
      </svg>
    ),
  };

  // Фалбек: если иконка не найдена, показываем цветной квадрат с инициалами
  const fallbackIcon = (
    <div
      className={`${sizeClasses[size]} ${bgColors[normalizedLanguage] || 'bg-indigo-500'} rounded-lg flex items-center justify-center text-white font-bold ${className}`}
    >
      {language ? language.substring(0, 2).toUpperCase() : '??'}
    </div>
  );

  return icons[normalizedLanguage] || fallbackIcon;
};

export default LanguageIcon;